{"version":3,"sources":["components/note/Note.js","components/note-title/NoteTitle.js","components/modal/Modal.js","components/completedNote/CompletedNote.js","App.js","index.js"],"names":["Note","note","setNote","title","setTitle","setCompletedNote","setIsNoteDisplayed","className","id","placeholder","type","value","onChange","e","target","autoComplete","onClick","preventDefault","prevState","uuid","NoteTitle","ref","completedNote","useState","isNoteDisplayed","wrapperRef","useRef","useEffect","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","Modal","FullNote","setIsModalShown","selectedNote","newTitle","setNewTitle","newNote","setNewNote","map","n","EditNoteCompleted","CompletedNote","isModalShown","toggleClass","setToggleClass","setTimeout","filter","App","console","log","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3ad0fe06.chunk.js","sourcesContent":["import React from \"react\";\r\nimport uuid from \"react-uuid\";\r\n\r\nimport \"./Note.css\";\r\n\r\nexport default function Note({\r\n  note,\r\n  setNote,\r\n  title,\r\n  setTitle,\r\n  setCompletedNote,\r\n  setIsNoteDisplayed,\r\n}) {\r\n  const SubmitNote = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (note || title !== \"\") {\r\n      setCompletedNote((prevState) => [\r\n        ...prevState,\r\n        { id: uuid(), title: title, note: note },\r\n      ]);\r\n    }\r\n\r\n    setTitle(\"\");\r\n    setNote(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"note__container\">\r\n        <input\r\n          id=\"input_note\"\r\n          placeholder=\"note...\"\r\n          type=\"text\"\r\n          value={note}\r\n          onChange={(e) => setNote(e.target.value)}\r\n          autoComplete=\"off\"\r\n        />\r\n\r\n        <div className=\"note__buttons-container\">\r\n          <button\r\n            className=\"note__submit-button\"\r\n            type=\"submit\"\r\n            onClick={SubmitNote}\r\n          >\r\n            Take Note\r\n          </button>\r\n          <button\r\n            className=\"note__close-button\"\r\n            onClick={() => setIsNoteDisplayed(false)}\r\n          >\r\n            Close\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nimport Note from \"../note/Note\";\r\nimport \"./NoteTitle.css\";\r\n\r\nexport default function NoteTitle({\r\n  title,\r\n  setTitle,\r\n  note,\r\n  setNote,\r\n  completedNote,\r\n  setCompletedNote,\r\n}) {\r\n  const [isNoteDisplayed, setIsNoteDisplayed] = useState(false);\r\n\r\n  const wrapperRef = useRef(null);\r\n  UseOutsideAlerter(wrapperRef);\r\n\r\n  //hiding note when focused outside of inputs\r\n  function UseOutsideAlerter(ref) {\r\n    useEffect(() => {\r\n      function handleClickOutside(event) {\r\n        if (ref.current && !ref.current.contains(event.target)) {\r\n          setIsNoteDisplayed(false);\r\n        }\r\n      }\r\n      // Bind the event listener\r\n      document.addEventListener(\"mousedown\", handleClickOutside);\r\n      return () => {\r\n        // Unbind the event listener on clean up\r\n        document.removeEventListener(\"mousedown\", handleClickOutside);\r\n      };\r\n    }, [ref]);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"note-title__maincontainer\">\r\n        <div className=\"note-title__sub-container\">\r\n          <div className=\"note-title__title-wrapper\">\r\n            <h1 className=\"note-title__title\">Take a note... drop a note</h1>\r\n          </div>\r\n\r\n          <div className=\"note-title__input-container\" ref={wrapperRef}>\r\n            <input\r\n              id=\"input_title\"\r\n              placeholder=\"Title...\"\r\n              type=\"text\"\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n              onClick={() => setIsNoteDisplayed(true)}\r\n              autoComplete=\"off\"\r\n            />\r\n            {isNoteDisplayed ? (\r\n              <Note\r\n                note={note}\r\n                setNote={setNote}\r\n                title={title}\r\n                setTitle={setTitle}\r\n                completedNote={completedNote}\r\n                setCompletedNote={setCompletedNote}\r\n                setIsNoteDisplayed={setIsNoteDisplayed}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./Modal.css\";\r\n\r\nexport default function Modal({\r\n  FullNote,\r\n  setCompletedNote,\r\n  setIsModalShown,\r\n  selectedNote,\r\n}) {\r\n  const [newTitle, setNewTitle] = useState(FullNote.title);\r\n  const [newNote, setNewNote] = useState(FullNote.note);\r\n\r\n\r\n\r\n\r\n  const EditNoteCompleted =(id, newTitle, newNote, e)=>{\r\n    setCompletedNote((prevState) =>\r\n      prevState.map((n) => {\r\n        if (n.id === id) {\r\n          return { ...n, title: newTitle, note: newNote };\r\n        }\r\n        return n;\r\n      })\r\n    );\r\n\r\n    setIsModalShown(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"modal__container\">\r\n      <div className=\"modal__note-information\">\r\n        <p>Edit Note:</p>\r\n\r\n        <input\r\n          type=\"text\"\r\n          value={newTitle}\r\n          onChange={(e) => setNewTitle(e.target.value)}\r\n        />\r\n\r\n        <br />\r\n\r\n        <input\r\n          type=\"text\"\r\n          value={newNote}\r\n          onChange={(e) => setNewNote(e.target.value)}\r\n        />\r\n\r\n        <div className=\"modal__button-container\">\r\n          <button\r\n            className=\"modal__ok-button\"\r\n            onClick={() => EditNoteCompleted(FullNote.id, newTitle, newNote)}\r\n          >\r\n            Ok\r\n          </button>\r\n          <button className=\"modal__cancel-button\">Cancel</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./CompletedNote.css\";\r\nimport Modal from \"../modal/Modal\";\r\n\r\nexport default function CompletedNote({ FullNote, setCompletedNote, completedNote }) {\r\n  const [isModalShown, setIsModalShown] = useState(false);\r\n  const [toggleClass, setToggleClass] = useState(false)\r\n  const EditNote = () => {\r\n    setIsModalShown(true);\r\n  };\r\n\r\n\r\nconst DeleteNote = (id) => {\r\n  setToggleClass(true)\r\n\r\nsetTimeout(() => {\r\n  setCompletedNote(completedNote.filter(note => note.id !== id))\r\n}, 700);\r\n}\r\n\r\n  return (\r\n    <>\r\n    <div key={FullNote.id} className={toggleClass ? \"completed-note__information-container-removed\" :\"completed-note__information-container\" }>\r\n      <div className=\"completed-note__information\">\r\n        <p className=\"completed-note__title\">{FullNote.title}</p>\r\n        <hr />\r\n        <p className=\"completed-note__note\">{FullNote.note}</p>\r\n      </div>\r\n      <div className=\"completed-note__button-container\">\r\n        <button\r\n          className=\"completed-note_edit-button\"\r\n          onClick={() => EditNote()}\r\n        >\r\n          Edit\r\n        </button>\r\n        <button className=\"completed-note_Delete-button\" onClick={() =>DeleteNote(FullNote.id)}>Drop</button>\r\n      </div>\r\n       </div>\r\n      <div>\r\n      {isModalShown && (\r\n        <Modal\r\n          FullNote={FullNote}\r\n          setCompletedNote={setCompletedNote}\r\n          setIsModalShown={setIsModalShown}\r\n          setToggleClass={setToggleClass}\r\n        />\r\n      )}\r\n      </div>\r\n      </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport NoteTitle from \"./components/note-title/NoteTitle\";\r\nimport CompletedNote from \"./components/completedNote/CompletedNote\";\r\n\r\nexport default function App() {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [note, setNote] = useState(\"\");\r\n  const [completedNote, setCompletedNote] = useState([]);\r\n  \r\n  console.log(completedNote)\r\n\r\n  return (\r\n    <>\r\n      <NoteTitle\r\n        title={title}\r\n        setTitle={setTitle}\r\n        note={note}\r\n        setNote={setNote}\r\n        completedNote={completedNote}\r\n        setCompletedNote={setCompletedNote}\r\n      />\r\n\r\n      <div className=\"completed-note__container\">\r\n        {completedNote.map((FullNote) => (\r\n          <CompletedNote\r\n            key={FullNote.id}\r\n            setCompletedNote={setCompletedNote}\r\n            completedNote={completedNote}\r\n            FullNote={FullNote}\r\n          />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}